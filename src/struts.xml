<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>
<<<<<<< HEAD
	<include file="struts-default.xml"></include>
	<!-- 默认编码集 -->
	<constant name="struts.i18n.encoding" value="utf-8"></constant>
	<!-- 设置需要struts2处理的请求后缀 -->
	<!--<constant name="struts.action.extension" value="do,action"></constant> -->
	<!-- 设置浏览器是否缓存静态内容，开发阶段关闭，生产阶段打开 -->
	<constant name="struts.serve.static.browserCache" value="false"></constant>
	<!-- 配置文件被修改后，系统是否自动重新加载该文件，开发阶段打开 -->
	<constant name="struts.configuration.xml.reload" value="true"></constant>
	<!-- 开发模式下使用的，可以打印出更加详细的错误信息 -->
	<constant name="struts.devMode" value="true"></constant>
	<!-- 是否开启动态方法调用 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" /> 
	<!-- 设置全局文件上传大小限制为1GB，具体的限制可以通过在具体的action内解决 -->
	<constant name="struts.multipart.maxSize" value="1073741824"/>
	<!-- 声明包 -->
	<package name="istc" namespace="/" extends="struts-default">
	<!--全局拦截器和拦截器栈-->
		<interceptors>  
            <interceptor name="loginInteceptor" class="club.istc.validation.SessionCheck" /><!--该拦截器栈用于检测session是否合法-->
            <interceptor-stack name="loginStack">
            	<interceptor-ref name="loginInteceptor"></interceptor-ref>  
            	<interceptor-ref name="defaultStack"></interceptor-ref>  
            </interceptor-stack>  
		</interceptors>
		<default-interceptor-ref name="loginStack"></default-interceptor-ref>
		<global-results>
			<result name="exit">timeout.jsp</result>
			<result name="error">error.jsp</result>
		</global-results><!--开启通配符的使用，用于动态方法调用-->
		<global-allowed-methods>regex:.*</global-allowed-methods>
		<action name="Login" class="club.istc.action.Login">
			<!-- 用户登录action-->
			<result name="input">login.jsp</result>
			<exception-mapping exception="java.lang.Exception" result="error" />
			<result name="success" type="redirectAction">welcome</result><!--tokenSession拦截器，用于拦截表单重复提交-->
			<interceptor-ref name="tokenSession" />
    		<interceptor-ref name="defaultStack" />  
		</action>
		<action name="Logout" class="club.istc.action.Logout">
			<!-- 用户登出action-->
			<result name="exit">timeout.jsp</result>
		</action>
		<action name="Register" class="club.istc.action.Register">
			<!-- 用户注册action-->
			<result name="input">register.jsp</result>
			<result name="success" type="redirectAction">mainpage</result>
			<exception-mapping exception="java.lang.Exception" result="error" />
			<interceptor-ref name="tokenSession" />   
    		<interceptor-ref name="defaultStack" />
		</action>
		<action name="HomeworkDocAction" class="club.istc.action.HomeworkDocAction">
			<!-- 上传文件action-->
			<interceptor-ref name="tokenSession" />   
    		<interceptor-ref name="defaultStack" /> 
			<result name="input">fileupload.jsp</result>
			<result name="success" type="redirectAction">fileupload</result>
			<result name="invalid.token" type="redirectAction">fileupload</result>
			<exception-mapping exception="java.lang.Exception" result="error" />
		</action>
		<action name="interviewee*" class="club.istc.action.InterviewAction" method="{1}">
			<!-- 面试用action-->
			<result name="input">interview.jsp</result>
			<exception-mapping exception="java.lang.Exception" result="error" />
		</action>
		<action name="*" class="club.istc.action.Redirect" method="{1}">
			<!-- 重定向页面 -->
			<result name="{1}">{1}.jsp</result>
			<exception-mapping exception="java.lang.Exception" result="error" />
		</action>
 
	</package>
</struts>
=======
    <!--Struts.xml 必须放在src目录下-->
    <!-- 配置Struts 时如果同时使用 annotation 和 xml 同时使用时不能出现下面这句话
        <constant name="struts.action.extension" value="do, action, jsp, html"/>
        否则会有bug
    -->

    <!-- 以下配置均可以注释掉 -->
    <constant name="struts.enable.DynamicMethodInvocation" value="false"/>
    <constant name="struts.devMode" value="true"/>
    <constant name="struts.objectFactory" value="spring"/>
    <constant name="struts.i18n.encoding" value="UTF-8"/>
    <constant name="struts.configuration.xml.reload" value="true"/>
    <constant name="struts.convention.classes.reload" value="true"/>
    <constant name="struts.serve.static.browserCache" value="false"/>

    <!--&lt;!&ndash; 设置全局文件上传大小限制为1GB，具体的限制可以通过在具体的action内解决 &ndash;&gt;-->
    <constant name="struts.multipart.maxSize" value="1073741824"/>
    <!--设置文件的上传路径-->
    <constant name="struts.multipart.saveDir" value="/home/Files/"/>
    <!--设置文件上传解析器-->
    <!--<constant name="struts.multipart.parser" value="cos"/>-->

    <!--全局包-->
    <package name="all" namespace="/" extends="struts-default">
        <!--该拦截器栈用于检测session是否合法-->
        <interceptors>
            <interceptor name="loginInterceptor" class="com.istc.Validation.SessionCheck" /><!--该拦截器栈用于检测session是否合法-->
            <interceptor-stack name="loginStack">
                <interceptor-ref name="loginInterceptor">
                    <param name="excludeMethods">mainpage, loginRedirect, registerRedirect</param>
                </interceptor-ref>
                <interceptor-ref name="defaultStack"></interceptor-ref>
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="loginStack"></default-interceptor-ref>
        <global-results>
            <result name="exit">/WEB-INF/content/jsp/logout.jsp</result>
            <result name="error" type="redirect">/WEB-INF/content/errorPages/error.jsp</result>
            <result name="loginRedirect" type="redirect">loginRedirect</result>
        </global-results>

    </package>

    <!--Ajax 包-->
    <package name="ajax" extends="json-default,struts-default">
        <interceptors>
            <interceptor-stack name="ajaxStack">
                <interceptor-ref name="jsonValidationWorkflowStack"/>
                <interceptor-ref name="defaultStack"/>
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="ajaxStack"/>
    </package>

</struts>
>>>>>>> strutsHibernate

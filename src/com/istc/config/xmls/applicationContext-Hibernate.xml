<?xml version="1.0" encoding="UTF-8"?>
<beans    xmlns="http://www.springframework.org/schema/beans"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:aop="http://www.springframework.org/schema/aop"
          xmlns:tx="http://www.springframework.org/schema/tx"
          xmlns:context="http://www.springframework.org/schema/context"
          xmlns:task="http://www.springframework.org/schema/task"

          xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

    <!--加载数据库配置xml为一个配置类对象, 这里本可以直接使用property name=location originalObject=路径简化配置，但为了演示加载多个配置文件，因此使用了list-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:com/istc/config/properties/databaseConfig.properties</value>
            </list>
        </property>
    </bean>

    <!--配置数据源，根据所用连接池不同有不同的class-->
        <!--使用druid-->
    <!--<bean entity="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
    <!--这里使用了dbcp2.x连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <!--驱动和连接属性-->
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>

        <!--连接池配置-->
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxTotal" value="${maxTotal}"/>
        <property name="maxWaitMillis" value="${maxWaitMillis}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"/>
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
        <property name="defaultAutoCommit" value="${defaultAutoCommit}"/>
        <property name="removeAbandonedOnBorrow" value="${removeAbandonedOnBorrow}"/>
        <property name="removeAbandonedOnMaintenance" value="${removeAbandonedOnMaintenance}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${logAbandoned}"/>
        <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
    </bean>

    <bean id = "sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--扫描实体类-->
        <property name="packagesToScan">
            <list>
                <value>com.istc.Entities</value>
            </list>
        </property>

        <!--关联数据库的配置-->
        <property name="dataSource" ref="dataSource"/>

        <!--Hibernate配置，这一部分还不知道如何将xml和properties文件分离-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">${show_sql}</prop>
                <prop key="hibernate.format_sql">${format_sql}</prop>
                <prop key="current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
            </props>
        </property>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--启用注解配置事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>